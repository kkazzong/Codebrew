<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="StatisticsMapper">

	<resultMap type="statistics" id="selectStatisticsMap">
		<result property="totalPrice" column="total_price" jdbcType="NUMERIC"/>
		<result property="totalCount" column="total_count" jdbcType="NUMERIC"/>
		<result property="statFlag" column="stat_flag" jdbcType="VARCHAR"/>
		<result property="statDate" column="stat_date" jdbcType="VARCHAR"/>
		<result property="startDate" column="start_date" jdbcType="VARCHAR"/>
		<result property="endDate" column="end_date" jdbcType="VARCHAR"/>
		<result property="referNo" column="refer_no" jdbcType="NUMERIC"/>
		<result property="imageName" column="image_name" jdbcType="VARCHAR"/>
		<result property="partyCount" column="party_count" jdbcType="VARCHAR"/>
		<result property="festivalCount" column="festival_count" jdbcType="VARCHAR"/>
		<result property="reviewCount" column="review_count" jdbcType="VARCHAR"/>
		<result property="userCount" column="user_count" jdbcType="VARCHAR"/>
		<!-- <association property="purchase" javaType="purchase">
			<id property="purchaseNo" column="purchase_no" jdbcType="NUMERIC"/>
			<result property="purchaseMethodType" column="purchase_method_type" jdbcType="VARCHAR"/>
			<result property="itemName" column="item_name" jdbcType="VARCHAR"/>
			<result property="purchaseDate" column="purchase_date" jdbcType="DATE"/>
			<result property="purchasePrice" column="purchase_price" jdbcType="NUMERIC"/>
			<result property="purchaseCount" column="purchase_count" jdbcType="VARCHAR"/>
			<result property="tranCode" column="tran_code" jdbcType="VARCHAR"/>
		</association>
		<association property="festival" javaType="festival">
			<id property="festivalNo" column="festival_no" jdbcType="NUMERIC"/>
			<result property="festivalImage" column="festival_image" jdbcType="VARCHAR"/>
			<result property="festivalName" column="festival_name" jdbcType="VARCHAR"/>
			<result property="addr" column="addr" jdbcType="VARCHAR"/>
			<result property="startDate" column="start_date" jdbcType="NUMERIC"/>
			<result property="endDate" column="end_date" jdbcType="VARCHAR"/>
		</association>
		<association property="party" javaType="com.codebrew.moana.service.domain.Party">
			<result property="partyNo" column="party_no" jdbcType="NUMERIC"/>
			<result property="partyName" column="party_name" jdbcType="VARCHAR"/>
			<result property="partyDate" column="party_date" jdbcType="VARCHAR"/>
			<result property="partyTime" column="party_time" jdbcType="VARCHAR"/>
			<result property="partyPlace" column="party_place" jdbcType="VARCHAR"/>
			<result property="partyImage" column="party_image" jdbcType="VARCHAR"/>
		</association> -->
	</resultMap>
	
	<select id="getDailyTotalSaleAmountStat" resultMap="selectStatisticsMap">
		SELECT
		to_char(purchase_date,'yyyy-mm-dd') AS stat_date,
		SUM(purchase_price) AS total_price,
		SUM(purchase_count) AS total_count,
		vt.stat_flag AS stat_flag
		FROM purchase, (
									  SELECT '1' AS stat_flag
									  FROM dual
									  ) vt
		<where>
			tran_code = '1'
			AND purchase_price >= 0
			<if test="startDate == null and endDate == null">
				AND purchase_date >= TO_DATE(SYSDATE - 7)
			</if>
			<if test="startDate != null and endDate != null">
				AND purchase_date BETWEEN TO_DATE(#{startDate}, 'yyyy-mm-dd') AND TO_DATE(#{endDate}, 'yyyy-mm-dd')
			</if>
		</where>
		GROUP BY to_char(purchase_date,'yyyy-mm-dd')
		ORDER BY 1
	</select>
	
	<select id="getDailyTotalSaleAmountStat2" parameterType="statistics" resultMap="selectStatisticsMap">
		SELECT
		to_char(purchase_date,'yyyy-mm-dd') AS stat_date,
		SUM(purchase_price) AS total_price,
		SUM(purchase_count) AS total_count,
		vt.stat_flag AS stat_flag
		FROM purchase, (
									  SELECT '1' AS stat_flag
									  FROM dual
									  ) vt
		<where>
			tran_code = '1'
			AND purchase_price >= 0
			<!-- default는 일주일 -->
			<if test="startDate == null and endDate == null">
				AND purchase_date >= TO_DATE(SYSDATE - 7)
			</if>
			<!-- 어제 혹은 오늘  -->
			<if test="startDate != null and endDate == null">
				AND TO_CHAR(purchase_date, 'yyyy-mm-dd') = #{startDate}
			</if>
			<!-- startDate, endDate 다른범위 -->
			<if test="startDate != null and endDate != null">
				AND purchase_date BETWEEN TO_DATE(#{startDate}, 'yyyy-mm-dd') AND TO_DATE(#{endDate}, 'yyyy-mm-dd')
			</if>
		</where>
		GROUP BY to_char(purchase_date,'yyyy-mm-dd')
		ORDER BY 1
	</select>
	
	<select id="getMonthlyTotalSaleAmountStat" parameterType="search" resultMap="selectStatisticsMap">
		SELECT
		vt.purchase_date AS stat_date,
		vt.purchase_price AS total_price,
		vt.purchase_count AS total_count,
		st.stat_flag AS stat_flag
		FROM (
					SELECT
					to_char(purchase_date, 'yyyy-mm') AS purchase_date,
					SUM(purchase_price) AS purchase_price,
					SUM(purchase_count) AS purchase_count
					FROM purchase
					<where>
						<if test="searchCondition != null">
							<choose>
								<when test="searchCondition == 1"> <!-- 올해, 전년도 -->
			          			  to_char(purchase_date, 'yyyy') >= to_char(add_months(SYSDATE,-12), 'yyyy')  
								</when>
								<when test="searchCondition == 2"><!-- 옿해만 -->
			          			  to_char(purchase_date, 'yyyy') = to_char(SYSDATE, 'yyyy')  
								</when>
							</choose>
						</if>
					</where>
					GROUP BY to_char(purchase_date, 'yyyy-mm')
					ORDER BY purchase_date
					) vt,
					(
					SELECT '2' AS stat_flag
					FROM dual
					) st
	</select>
	
	<select id="getMonthlyTotalSaleAmountStat2" parameterType="statistics"  resultMap="selectStatisticsMap">
		SELECT
		vt.purchase_date AS stat_date,
		vt.purchase_price AS total_price,
		vt.purchase_count AS total_count,
		st.stat_flag AS stat_flag
		FROM (
					SELECT
					to_char(purchase_date, 'yyyy-mm') AS purchase_date,
					SUM(purchase_price) AS purchase_price,
					SUM(purchase_count) AS purchase_count
					FROM purchase
					<where>
          				<!-- to_char(purchase_date, 'yyyy') = to_char(SYSDATE, 'yyyy')   -->
							to_char(purchase_date, 'yyyy') >= to_char(add_months(SYSDATE,-12), 'yyyy')  
          				<if test="startDate != null and endDate == null">
		          			AND to_char(purchase_date,'yyyy-mm') = #{startDate}
						</if> 
						<if test="startDate != null and endDate != null">
		          			AND to_char(purchase_date,'yyyy-mm') BETWEEN #{startDate} AND #{endDate}
						</if>          				
					</where>
					GROUP BY to_char(purchase_date, 'yyyy-mm')
					ORDER BY purchase_date
					) vt,
					(
					SELECT '2' AS stat_flag
					FROM dual
					) st
	</select>
	
	<select id="getQuarterTotalSaleAmountStat" resultMap="selectStatisticsMap">
		SELECT
		TO_CHAR(purchase_date, 'q') AS stat_date,
		SUM(purchase_price) AS total_price,
		SUM(purchase_count) AS total_count,
		vt.stat_flag AS stat_flag
		FROM purchase, (
									 SELECT '3' AS stat_flag
									 FROM dual
									 ) vt
    	WHERE to_char(purchase_date, 'yyyy') = to_char(SYSDATE, 'yyyy')
		GROUP BY TO_CHAR(purchase_date, 'q')
		ORDER BY stat_date
	</select>
	
	<select id="getQuarterTotalSaleAmountStat2" parameterType="statistics" resultMap="selectStatisticsMap">
		SELECT
		TO_CHAR(purchase_date, 'q') AS stat_date,
		SUM(purchase_price) AS total_price,
		SUM(purchase_count) AS total_count,
		vt.stat_flag AS stat_flag
		FROM purchase, (
									 SELECT '3' AS stat_flag
									 FROM dual
									 ) vt
		<where>
			<if test="startDate == null and endDate == null">
				to_char(purchase_date, 'yyyy') = to_char(SYSDATE, 'yyyy')
			</if>
			<if test="startDate != null">
				to_char(purchase_date, 'yyyy') = #{startDate}
			</if>
		</where>
		GROUP BY TO_CHAR(purchase_date, 'q')
		ORDER BY stat_date
	</select>
	
	<!-- 찜 많이 받은 상위 3개 축제 -->
	<select id="getFestivalZzim" resultMap="selectStatisticsMap">
		SELECT
		vt.festival_no AS refer_no,
		vt.festival_name AS name,
		vt.festival_image AS image,
		vt.addr AS addr,
		vt.start_date AS start_date,
		vt.end_date AS end_date,
		vt.total_count AS total_count
		FROM (
					SELECT
					z.festival_no AS festival_no,
					f.festival_name AS festival_name,
					f.festival_image AS festival_image,
					f.addr AS addr,
					f.start_date AS start_date,
					f.end_date AS end_date,
					count(z.festival_no) AS total_count
					FROM zzim z, festival f
					WHERE z.festival_no = f.festival_no
					GROUP BY z.festival_no, f.festival_name, f.festival_image, f.addr, f.start_date, f.end_date
					ORDER by total_count DESC
					)vt
		WHERE ROWNUM BETWEEN 1 AND 3
	</select>
	
	<!-- 평점순 -->
	<select id="getFestivalRating" resultMap="selectStatisticsMap">
		SELECT
		vt.festival_no AS refer_no,
		vt.festival_name AS name,
		vt.festival_image AS image,
		vt.start_date AS start_date,
		vt.end_date AS end_date,
		vt.total_count AS total_count
		FROM (
					SELECT
					f.festival_no AS festival_no,
					f.festival_image AS festival_image,
					f.festival_name AS festival_name,
					f.start_date AS start_date,
					f.end_date AS end_date,
					SUM(r.review_festival_rating) AS total_count
					FROM festival f, review r
					WHERE f.festival_no = r.festival_no
					GROUP BY f.festival_no,
										f.festival_image,
										f.festival_name,
										f.start_date,
										f.end_date
					ORDER BY total_count DESC
					)vt
		WHERE ROWNUM BETWEEN 1 AND 3
	</select>
	
	<!-- 파티멤버 참여순 -->
	<select id="getPartyCount" resultMap="selectStatisticsMap">
		SELECT
		vt.party_no AS refer_no,
		vt.party_name AS name,
		vt.party_image AS image,
		vt.party_place AS addr,
		vt.total_count AS total_count
		FROM (
					SELECT
					pm.party_no AS party_no,
					p.party_name AS party_name,
					p.party_image AS party_image,
					p.party_place AS party_place,
					count(pm.party_no) AS total_count
					FROM party p, party_member pm
					WHERE p.party_no = pm.party_no
					GROUP BY pm.party_no,
										p.party_name,
										p.party_image,
										p.party_place
					ORDER BY total_count DESC
					)vt
		WHERE ROWNUM BETWEEN 1 AND 3
	</select>
	
	<!-- 총갯수 -->
	<select id="getTotalCount" resultMap="selectStatisticsMap">
		SELECT 
		pt.party_count,
		ft.festival_count,
		rv.review_count,
		u.user_count
		FROM (
					SELECT COUNT(party_no) AS party_count
					FROM party
					WHERE delete_flag IS NULL
					) pt,
					(
					SELECT COUNT(festival_no) AS festival_count
					FROM festival
					WHERE delete_flag IS NULL
					) ft,
					(
					SELECT COUNT(review_no) AS review_count
					FROM review
					WHERE delete_flag = 1
					) rv,
					(
					SELECT COUNT(user_id) AS user_count
					FROM users
					WHERE role NOT IN ('d')
					) u
	</select>
</mapper>