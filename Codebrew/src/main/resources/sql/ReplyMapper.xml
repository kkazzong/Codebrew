<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="ReplyMapper">

	<resultMap id="replySelectMap" type="reply">
		<result property="replyNo" column="reply_no" jdbcType="NUMERIC"/>
		<result property="userId" column="user_id" jdbcType="VARCHAR"/>
		<result property="reviewNo" column="review_no" jdbcType="NUMERIC"/>
		<result property="replyDetail" column="reply_detail" jdbcType="VARCHAR"/>
		<result property="replyRegDate" column="reply_reg_date" jdbcType="DATE"/>
	</resultMap>
	
	<resultMap id="reviewSelectMap" type="review">
		<result property="reviewNo" column="review_no" jdbcType="NUMERIC"/>
		<result property="userId" column="user_id" jdbcType="VARCHAR"/>
		<result property="festivalNo" column="festival_no" jdbcType="NUMERIC"/>
		<result property="festivalName" column="festival_name" jdbcType="VARCHAR"/>
		<result property="addr" column="addr" jdbcType="VARCHAR"/>
		<result property="checkCode" column="check_code" jdbcType="VARCHAR"/>
		<result property="reviewTitle" column="review_title" jdbcType="VARCHAR"/>
		<result property="goodCount" column="good_count" jdbcType="NUMERIC"/>
		<result property="reviewFestivalRating" column="review_festival_rating" jdbcType="NUMERIC"/>
		<result property="reviewDetail" column="review_detail" jdbcType="VARCHAR"/>
		<result property="reviewHashtag" column="review_hashtag" jdbcType="VARCHAR"/>
		<result property="reviewRegDate" column="review_reg_date" jdbcType="DATE"/>
	</resultMap>

	
	<insert id="addReply" parameterType="reply" useGeneratedKeys="true" keyProperty="replyNo" keyColumn="reply_no">
		INSERT 
		INTO reply (
					reply_no, 
					user_id, 
					review_no, 
					reply_detail, 
					reply_reg_date
					)
		VALUES (
				seq_reply_reply_no.NEXTVAL, 
				#{userId:VARCHAR}, 
				#{reviewNo:NUMERIC}, 
				#{replyDetail:VARCHAR}, 
				SYSDATE
				)
	</insert>
	
	<select id="getReply" parameterType="int" resultMap="replySelectMap">
		SELECT
			rp.reply_no, 
			rp.user_id, 
			rp.review_no, 
			rp.reply_detail, 
			rp.reply_reg_date
		FROM reply rp 
		WHERE rp.reply_no = #{replyNo:NUMERIC}
	</select>
	
	<update id="updateReply" parameterType="reply">
		UPDATE reply SET
			reply_detail = #{replyDetail:VARCHAR}, 
			reply_reg_date = SYSDATE 
		WHERE reply_no = #{replyNo:NUMERIC} 
		AND user_id = #{userId:VARCHAR} 
		AND review_no = #{review.reviewNo:NUMERIC}
	</update>
	
	<delete id="deleteReply" parameterType="int">
		DELETE
		FROM reply
		WHERE reply_no = #{replyNo}
	</delete>
	
	<!-- user가 자기자신이 쓴 댓글을 보고싶을 때 -->
	<!-- user 경우 : SELECT * FROM WHERE user_id like '{userId}' -->
	<!-- admin 경우 : SELECT * FROM WHERE user_id like '%' -->
	<!-- 보통의 경우에 reply list는 review에 종속적이다 -->

	<select id="getAllReplyList" parameterType="map" resultMap="replySelectMap">
		SELECT * 
		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
						FROM ( SELECT
									rp.reply_no, 
									rp.user_id, 
									rp.review_no, 
									rp.reply_detail, 
									rp.reply_reg_date
									FROM reply rp 
									WHERE rp.user_id = #{userId}
									ORDER BY reply_reg_date ) inner_table
						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>

	 
	<!-- for 'normal user' menu -->
	<select id="getReplyList" parameterType="map" resultMap="replySelectMap">
		SELECT *
		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
					FROM (	SELECT 
									rp.reply_no, 
									rp.user_id, 
									rp.review_no, 
									rp.reply_detail, 
									rp.reply_reg_date
							FROM reply rp 
							AND rp.review_no = #{reviewNo} 
							ORDER BY rp.reply_no ) inner_table
					WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} ) 
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1 
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	<!-- only for 'admin' menu -->
	<!-- <select id="getAllReplyList" parameterType="search" resultMap="replySelectMap">
		SELECT * 
		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
					FROM ( 	SELECT
								rp.reply_no, 
								rp.user_id, 
								rp.review_no, 
								rp.reply_detail, 
								rp.reply_reg_date, 
							FROM reply rp, users u
							WHERE rp.user_id = u.user_id
							<if test="searchCondition != null">
								<if test="searchCondition == 0 and searchKeyword != ''">
									AND rp.user_id like '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 1 and searchKeyword != ''">
									AND rp.reply_no like '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 2 and searchKeyword != ''">
									And rp.review_no like '%${searchKeyword}%'
								</if>
							</if>
							ORDER BY rp.reply_no) inner_table
					WHERE ROWNUM &lt; = #{endRowNum})
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select> -->
	
	<!-- SQL : SELECT ROW Count -->
	<select  id="getTotalCount" parameterType="search"	 resultType="int">
	  	SELECT COUNT(*) 
	  	FROM(	SELECT 
		  				rp.reply_no, 
		  				rp.user_id, 
		  				rp.review_no, 
		  				rp.reply_detail, 
		  				rp.reply_reg_date, 
						FROM reply rp 
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			rp.reply_no like '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			rp.reply_detail like '%${searchKeyword}%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
						 			rp.user_id like '%${searchKeyword}%'
								</if>
							</where>
						</if> ) countTable	
	</select>

</mapper>